swagger: "2.0"
info:
  description: "Manage and render document templates"
  version: "1.0.0"
  title: "Document Template System"
basePath: "/api/v1"

paths:
  /status:
    get:
      tags:
        - "API"
      summary: "get status of the API"
      responses:
        200:
          description: "success"
          schema:
            type: "string"
            example: "OK"
            
  # DocData
  /docdata:
    post:
      tags:
        - "DocData"
      summary: "Import docData data structure"
      description: ""
      operationId: "addDocData"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "docData"
          description: "Required: docType, dataKey, data"
          required: true
          schema:
            type: "object"
            required:
              - docType
              - dataKey
              - data
            properties:
              docType:
                type: "string"
                example: "courseCompletion"
              dataKey:
                type: "string"
                example: "F8C412A9"
              data:
                type: "object"
      responses:
        201:
          headers:
            Location:
              type: string
              description: "The location of the newly created resource"
          description: "success"
          schema:
            $ref: "#/definitions/DocDataDetail"
        400:
          description: "failed request, missing or invalid data"
  /docdata/{docType}/{dataKey}:
    head:
      tags:
        - "DocData"
      summary: ""
      description: "Same as [GET /docdata/{docType}/{dataKey}](#/DocData/getDocDataByKey) use this just to see if the docType/dataKey exists"
      operationId: "getDocDataExists"
      parameters:
        - name: "docType"
          in: "path"
          description: "type constant, does not have to already exist"
          required: true
          type: string
        - name: "dataKey"
          in: "path"
          description: "docData identifier, must be unique within type"
          required: true
          type: "string"
      responses:
        200:
          description: "success"
        404:
          description: "no such docData"

  /docdata/{docType}/{dataKey}/history:
    get:
      tags:
        - "DocData"
      summary: "list versions of docType/dataKey"
      operationId: "getDocDataVersions"
      parameters:
        - name: "docType"
          in: "path"
          description: "type constant, does not have to already exist"
          required: true
          type: string
        - name: "dataKey"
          in: "path"
          description: "docData identifier, must be unique within type"
          required: true
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            type: "object"
            properties:
              total:
                type: "number"
                example: 1
              items:
                type: "array"
                items:
                  $ref: "#/definitions/DocDataDetail"
        404:
          description: "DocData not found"

  /render/{docType}/{templateKey}/{dataKey}:
    get:
      tags:
        - "Render"
      summary: "get document from template and docData"
      description: "this will use the most recent template and docData of each type+key"
      operationId: "renderLatest"
      produces:
        - "application/pdf"
        - "text/html"
      parameters:
        - name: "docType"
          in: "path"
          description: "constant to identify the type of document"
          required: true
          type: "string"
        - name: "templateKey"
          in: "path"
          description: "constant to identify template, unique per docType"
          required: true
          type: "string"
        - name: "dataKey"
          in: "path"
          description: "docData identifier, unique per docType"
          required: true
          type: "string"
      responses:
        200:
          description: "success"
        404:
          description: "docData not found"
          
definitions:
  DocType:
    type: "object"
    required:
      - docType
    properties:
      docType:
        type: "string"
        example: "courseCompletionCertificate"
      templateCount:
        type: "number"
        example: 20
      links: 
        type: "object"
        properties:
          templates: 
            type: "string"
            description: "list templates in doctype"
            example: "/template?filter[type]=courseCompletionCertificate"
            format: "uri"
        
        
  TemplateDetail:
    type: "object"
    required:
      - docType
      - templateKey
      - author
    properties:
      templateId:
        type: "string"
        format: "uuid"
      docType:
        type: "string"
        example: "courseCompletionCertificate"
        description: "constant to identify the type of template"
      templateKey:
        type: "string"
        example: "default-ce"
        description: "constant to identify template, unique per docType"
      author:
        type: "string"
        example: "Robert Martin"
        description: "Authors name"
      createdAt:
        type: "string"
        format: "date-time"
      bodyUri:
        type: "string"
        format: "uri"
        example: "/template/3fa85f64-5717-4562-b3fc-2c963f66afa6"
        description: "link to template body"

  DocDataDetailWithData:
    type: "object"
    required:
      - docType
      - dataKey
      - data
    properties:
      dataId:
        type: "string"
        format: "uuid"
      docType:
        type: "string"
        example: "courseCompletion"
      dataKey:
        type: "string"
        example: "F8C412A9"
      createdAt:
        type: "string"
        format: "date-time"
      data:
        type: "object"

  DocDataDetail:
    type: "object"
    required:
      - docType
      - dataKey
    properties:
      dataId:
        type: "string"
        format: "uuid"
      docType:
        type: "string"
        example: "courseCompletion"
      dataKey:
        type: "string"
        example: "F8C412A9"
      createdAt:
        type: "string"
        format: "date-time"
      link:
        type: "string"
        example: "/docdata/6da85f64-5717-4562-b3fc-2c963f66af4c"
